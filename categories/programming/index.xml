<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on jackvnimble</title>
    <link>/categories/programming/</link>
    <description>Recent content in Programming on jackvnimble</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Multiplexing and Demultiplexing</title>
      <link>/posts/2018-06-11-mux-and-demux/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/2018-06-11-mux-and-demux/</guid>
      <description>Multiplexing Multiplexing is a technique whereby multiple signals can be sent across the same shared medium. The relevant elementary logic gate is called a MUX. First, here is the logic table:
   a b select out     0 0 0 0   0 1 0 0   1 0 0 1   1 1 0 1   0 0 1 0   0 1 1 1   1 0 1 0   1 1 1 1    MUX is short for multiplexer.</description>
    </item>
    
    <item>
      <title>The Universal Gate - Week 1</title>
      <link>/posts/2018-06-11-the-universal-gate/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/2018-06-11-the-universal-gate/</guid>
      <description>NAND - The Universal Gate This week we built a lot of logic gates or &amp;ldquo;chips&amp;rdquo; all using a single primitive: the humble NAND gate. NAND gates can be composed to build all other elementary logic gates and from those you can construct an ALU (arithmetic logic unit) and memory etc. This is why it&amp;rsquo;s called the Universal Gate and why the course title is Nand to Tetris1. AND/OR cannot be used as a primitive since they cannot invert.</description>
    </item>
    
    <item>
      <title>NAND to Tetris</title>
      <link>/posts/2018-06-04-nand-to-tetris/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/2018-06-04-nand-to-tetris/</guid>
      <description>NAND to Tetris My first programming course was taught in Java. I often got distracted during trying to imagine how Java worked under the hood. Type &amp;lt;code&amp;gt; and you get &amp;lt;output&amp;gt;. Wait, how? What happens when I declare a variable? and why do I need that static word up there? How does a text file get translated into something the computer can use? And then after translation.. how does the computer actually process that generated file?</description>
    </item>
    
  </channel>
</rss>